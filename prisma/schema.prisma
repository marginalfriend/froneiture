// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Account Management

model Account {
  id       String @id @default(uuid())
  email    String @unique
  password String
}

// Product Management

model UnitType {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model DesignStyle {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Product {
  id            String      @id @default(uuid())
  name          String
  description   String
  designStyle   DesignStyle @relation(fields: [designStyleId], references: [id])
  designStyleId Int
  unitType      UnitType    @relation(fields: [unitTypeId], references: [id])
  unitTypeId    Int
  images        Image[]
  Inquiry       Inquiry[]
}

model Image {
  id          String   @id @default(cuid())
  fileName    String
  path        String
  size        Int
  mimeType    String
  width       Int?
  height      Int?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Product     Product? @relation(fields: [productId], references: [id])
  productId   String?
}

model Partnership {
  id          Int     @id @default(autoincrement())
  name        String
  email       String
  phoneNumber String
  address     String
  reference   String?
}

enum Status {
  PENDING
  PAID
}

model Inquiry {
  id          Int     @id @default(autoincrement())
  name        String
  email       String
  status      Status  @default(PENDING)
  phoneNumber String
  product     Product @relation(fields: [productId], references: [id])
  productId   String
}
